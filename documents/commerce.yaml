openapi: 3.0.2
info:
  title: commerce
  version: 1.0.0
paths:
  /order-microservice/orders:
    post:
      requestBody:
        description: Body for register order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRq'
            examples:
              application/json:
                value:
                  idUser: "87fc4300-0361-4b67-bee8-fd6c8aa34b3a\t"
                  products:
                  - idProduct: ""
                    quantity: 18.73
                  - idProduct: o
                    quantity: 96.5
      tags:
      - Orders
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderRs'
              examples:
                application/json:
                  value:
                    idOrder: 87fc4300-0361-4b67-bee8-fd6c8aa34b3a
          description: Success response for register order
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
              examples:
                application/json:
                  value:
                    timestamp: 2018-02-10T09:30Z
                    status: 400
                    error: Bad Request
                    path: /users
          description: Error response
      summary: Create Order
      description: Operation for register a new order
  /order-microservice/orders/users/{id}:
    get:
      tags:
      - Orders
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersByUserRs'
              examples:
                application/json:
                  value:
                    orders:
                    - id: 87fc4300-0361-4b67-bee8-fd6c8aa34b3a
                      total: 98.2
                      orderProducts:
                        id: "5"
                        total: 51.34
                        quantity: 78.62
                        Product:
                          id: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
                          name: computador
                          category: tecnologia
                          price: "1600"
                    - id: 87fc4300-0361-4b67-bee8-fd6c8aa34b3a
                      total: 59.07
                      orderProducts:
                        id: ""
                        total: 5.93
                        quantity: 37.02
                        Product:
                          id: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
                          name: computador
                          category: tecnologia
                          price: "1600"
          description: Success response with a list orders register by user
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
              examples:
                application/json:
                  value:
                    timestamp: 2018-02-10T09:30Z
                    status: 400
                    error: Bad Request
                    path: /users
          description: Error response
      summary: Get order by user
      description: Operation that allow get a lits orders generated by user
    parameters:
    - examples:
        id:
          value:
          - 87fc4300-0361-4b67-bee8-fd6c8aa34b3a
      name: id
      description: id user
      schema:
        type: string
      in: path
      required: true
    - name: token
      description: Token for request authorization
      schema:
        type: string
      in: header
      required: true
  /product-microservice/products:
    get:
      tags:
      - Products
      parameters:
      - name: token
        description: Token for request authorization
        schema:
          type: string
        in: header
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProdcutsRs'
              examples:
                application/json:
                  value:
                    products:
                    - id: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
                      name: computador
                      category: tecnologia
                      price: "1600"
                    - id: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
                      name: computador
                      category: tecnologia
                      price: "1600"
          description: Operation to get a list of products
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
              examples:
                application/json:
                  value:
                    timestamp: 2018-02-10T09:30Z
                    status: 400
                    error: Bad Request
                    path: /users
          description: Error response
      summary: Get products
      description: Operation that return the list of products
    put:
      requestBody:
        description: Body for update to product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRq'
            examples:
              application/json:
                value:
                  id: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
                  name: computador
                  category: tecnologia
                  price: "1600"
      tags:
      - Products
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductRs'
              examples:
                application/json:
                  value:
                    product:
                      id: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
                      name: computador
                      category: tecnologia
                      price: "1600"
          description: Success response for update product
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
              examples:
                application/json:
                  value:
                    timestamp: 2018-02-10T09:30Z
                    status: 400
                    error: Bad Request
                    path: /users
          description: Error response
      summary: Update product
      description: Operation for update a product
    post:
      requestBody:
        description: Body for create a new product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRq'
            examples:
              application/json:
                value:
                - name: computador
                  category: tecnologia
                  price: 1200
        required: true
      tags:
      - Products
      parameters:
      - name: token
        description: Token for request authorization
        schema:
          type: string
        in: header
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductRs'
              examples:
                application/json:
                  value:
                  - idProduct: bd712841-6756-460a-a99d-c588842654c2
          description: Success response for creation of a new product
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
              examples:
                application/json:
                  value:
                    timestamp: 2018-02-10T09:30Z
                    status: 400
                    error: Bad Request
                    path: /users
          description: Error response
      summary: Create Product
      description: Operation that allow create a new product
  /product-microservice/products/{id}:
    get:
      tags:
      - Products
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductRs'
              examples:
                application/json:
                  value:
                    product:
                      id: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
                      name: computador
                      category: tecnologia
                      price: "1600"
          description: Success response with the product info
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
              examples:
                application/json:
                  value:
                    timestamp: 2018-02-10T09:30Z
                    status: 400
                    error: Bad Request
                    path: /users
          description: Error response
      summary: Get product
      description: Get information about a specific product with its id
    delete:
      tags:
      - Products
      responses:
        "202":
          description: Success respone for remove product
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
              examples:
                application/json:
                  value:
                    timestamp: 2018-02-10T09:30Z
                    status: 400
                    error: Bad Request
                    path: /users
          description: Error response
      summary: Remove product
      description: Operation that allow remove product
    parameters:
    - examples:
        id:
          value:
          - bd712841-6756-460a-a99d-c588842654c2
      name: id
      description: Id of the product
      schema:
        type: string
      in: path
      required: true
    - name: token
      description: Token for request authorization
      schema:
        type: string
      in: header
      required: true
  /product-microservice/products/filter:
    get:
      tags:
      - Products
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProdcutsRs'
              examples:
                application/json:
                  value:
                    products:
                    - id: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
                      name: computador
                      category: tecnologia
                      price: "1600"
                    - id: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
                      name: computador
                      category: tecnologia
                      price: "1600"
          description: Success response with the products that was filter
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
              examples:
                application/json:
                  value:
                    timestamp: 2018-02-10T09:30Z
                    status: 400
                    error: Bad Request
                    path: /users
          description: Error response
      summary: Filter product
      description: "Operation that allow filter product by name, category or range\
        \ price"
    parameters:
    - name: token
      description: Token for request authorization
      schema:
        type: string
      in: header
      required: true
  /user-microservice/users:
    post:
      requestBody:
        description: Body with info of the user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRq'
            examples:
              application/json:
                value:
                  name: Jaime
                  lastname: Bernal
                  username: jbernal
                  password: "1234"
      tags:
      - Users
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserRs'
              examples:
                application/json:
                  value:
                    idUser: 87fc4300-0361-4b67-bee8-fd6c8aa34b3a
          description: Success response for the request of create user
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
              examples:
                application/json:
                  value:
                    timestamp: 2018-02-10T09:30Z
                    status: 400
                    error: Bad Request
                    path: /users
          description: Error response
      summary: Create user
      description: Operation for create a new user
    parameters:
    - name: token
      description: Token for request authorization
      schema:
        type: string
      in: header
      required: true
  /user-microservice/users/login:
    post:
      requestBody:
        description: Body for authenticate an user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserRq'
            examples:
              application/json:
                value:
                  username: jbernal
                  password: "1234"
      tags:
      - Users
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUserRs'
              examples:
                application/json:
                  value:
                    token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI5YzRlNGY3Yi04YzU0LTQ4NjAtOWY4Mi00ZjQ3OWIzMzkwNjgiLCJpYXQiOjE3Mzk3MTA2NzEsImV4cCI6MTczOTcxNDI3MX0.rLpCdzcgyT_4wy64lBS62FtTaijcM0FQdTerPcTVwI8
          description: Success response for login user
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
              examples:
                application/json:
                  value:
                    timestamp: 2018-02-10T09:30Z
                    status: 400
                    error: Bad Request
                    path: /users
          description: Error response
      summary: Login user
      description: Operation for login with user
    parameters:
    - name: token
      description: Token for request authorization
      schema:
        type: string
      in: header
      required: true
  /user-microservice/users/token/validate:
    get:
      tags:
      - Users
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateTokenRs'
              examples:
                application/json:
                  value:
                    tokenValidate: true
          description: Response for validation token
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
              examples:
                application/json:
                  value:
                    timestamp: 2018-02-10T09:30Z
                    status: 400
                    error: Bad Request
                    path: /users
          description: Error response
      summary: Validate Token
      description: Operation allow validate token
    parameters:
    - name: token
      description: Token for request authorization
      schema:
        type: string
      in: header
      required: true
components:
  schemas:
    CreateProductRq:
      description: ""
      type: object
      properties:
        name:
          description: product name
          type: string
        category:
          description: Category of the product
          type: string
        price:
          format: double
          description: Price of the prodcut
          type: number
    CreateProductRs:
      description: Respuesta a la creacion de un producto
      required:
      - idProduct
      type: object
      properties:
        idProduct:
          description: 'Id of the new product '
          type: string
    GetProdcutsRs:
      description: ""
      type: object
      properties:
        products:
          description: List of products
          type: array
          items:
            $ref: '#/components/schemas/Product'
      example:
      - products:
        - id: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
          name: computador
          category: tecnologia
          price: "1600"
        - id: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
          name: computador
          category: tecnologia
          price: "1600"
    GetProductRs:
      description: ""
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
          description: Product that was consult
      example:
      - product:
          id: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
          name: computador
          category: tecnologia
          price: "1600"
    Product:
      description: ""
      type: object
      properties:
        id:
          description: Id of the product
          type: string
          example: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
        name:
          description: Product name
          type: string
          example: computador
        category:
          description: Category product
          type: string
          example: tecnologia
        price:
          format: double
          description: Price product
          type: number
          example: "1600"
      example:
      - id: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
        name: computador
        category: tecnologia
        price: "1600"
    UpdateProductRq:
      description: ""
      type: object
      properties:
        id:
          description: Id of the product
          type: string
          example: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
        name:
          description: Product name
          type: string
          example: computador
        category:
          description: Category product
          type: string
          example: tecnologia
        price:
          format: double
          description: Price product
          type: number
          example: "1600"
    UpdateProductRs:
      description: ""
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
          description: ""
    CreateUserRq:
      description: ""
      type: object
      properties:
        name:
          description: name of the person
          type: string
          example: Jaime
        lastname:
          description: lastname of the person
          type: string
          example: Bernal
        username:
          description: username to use for login
          type: string
          example: jbernal
        password:
          description: password to use for login
          type: string
          example: "1234"
    CreateUserRs:
      description: ""
      type: object
      properties:
        idUser:
          description: Id of he user created
          type: string
          example: 87fc4300-0361-4b67-bee8-fd6c8aa34b3a
      example:
        idUser: 87fc4300-0361-4b67-bee8-fd6c8aa34b3a
    LoginUserRq:
      description: ""
      type: object
      properties:
        username:
          description: username to use for login
          type: string
          example: jbernal
        password:
          description: password to use for login
          type: string
          example: "1234"
      example:
      - username: jbernal
        password: "1234"
    LoginUserRs:
      description: ""
      type: object
      properties:
        token:
          description: Token for authorization of the user
          type: string
          example: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI5YzRlNGY3Yi04YzU0LTQ4NjAtOWY4Mi00ZjQ3OWIzMzkwNjgiLCJpYXQiOjE3Mzk3MTA2NzEsImV4cCI6MTczOTcxNDI3MX0.rLpCdzcgyT_4wy64lBS62FtTaijcM0FQdTerPcTVwI8
    ValidateTokenRs:
      description: ""
      type: object
      properties:
        tokenValidate:
          description: Rsesult validation token
          type: boolean
    ProductOrder:
      description: Product of a order
      type: object
      properties:
        idProduct:
          description: id of the product
          type: string
        quantity:
          description: quantity of the product in the order
          type: number
      example:
        idProduct: 87fc4300-0361-4b67-bee8-fd6c8aa34b3a
        quantity: 8
    CreateOrderRq:
      description: ""
      type: object
      properties:
        idUser:
          description: 'Id of the user '
          type: string
          example: "87fc4300-0361-4b67-bee8-fd6c8aa34b3a\t"
        products:
          description: requested products
          type: array
          items:
            $ref: '#/components/schemas/ProductOrder'
      example:
        idUser: "87fc4300-0361-4b67-bee8-fd6c8aa34b3a\t"
        products:
        - idProduct: ""
          quantity: 3.22
        - idProduct: e
          quantity: 38.44
    CreateOrderRs:
      description: ""
      type: object
      properties:
        idOrder:
          description: Id of the new order
          type: string
          example: 87fc4300-0361-4b67-bee8-fd6c8aa34b3a
      example:
        idOrder: 87fc4300-0361-4b67-bee8-fd6c8aa34b3a
    GetOrdersByUserRs:
      description: ""
      type: object
      properties:
        orders:
          description: ""
          type: array
          items:
            $ref: '#/components/schemas/Order'
      example:
        orders:
        - id: 87fc4300-0361-4b67-bee8-fd6c8aa34b3a
          total: 32.4
          orderProducts:
            id: "2"
            total: 50.08
            quantity: 79.32
            Product:
              id: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
              name: computador
              category: tecnologia
              price: "1600"
        - id: 87fc4300-0361-4b67-bee8-fd6c8aa34b3a
          total: 88.75
          orderProducts:
            id: ""
            total: 40.1
            quantity: 8.55
            Product:
              id: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
              name: computador
              category: tecnologia
              price: "1600"
    Order:
      description: ""
      type: object
      properties:
        id:
          description: id of the order
          type: string
          example: 87fc4300-0361-4b67-bee8-fd6c8aa34b3a
        total:
          format: double
          description: total order
          type: number
        orderProducts:
          $ref: '#/components/schemas/OrderProduct'
          description: ""
      example:
        id: 87fc4300-0361-4b67-bee8-fd6c8aa34b3a
        total: 38.42
        orderProducts:
          id: ml
          total: 43.72
          quantity: 95.77
          Product:
            id: "3d47da0b-aa34-4065-bf3a-98803342df0f\t"
            name: computador
            category: tecnologia
            price: "1600"
    OrderProduct:
      description: ""
      type: object
      properties:
        id:
          description: id of the product
          type: string
        total:
          format: double
          description: total for the product
          type: number
        quantity:
          format: double
          description: quantity of the product for the order
          type: number
        Product:
          $ref: '#/components/schemas/Product'
          description: id of the product
      example:
      - id: 3d47da0b-aa34-4065-bf3a-98803342df0f
        total: 77.11
        quantity: 43.14
        Product:
          id: 3d47da0b-aa34-4065-bf3a-98803342df0f
          name: computador
          category: tecnologia
          price: "1600"
    ErrorRs:
      description: ""
      type: object
      properties:
        timestamp:
          format: date-time
          description: date for request
          type: string
        status:
          description: status http
          type: number
        error:
          description: title error
          type: string
        path:
          description: resource
          type: string
      example:
      - timestamp: 2018-02-10T09:30Z
        status: 400
        error: Bad request
        path: /users
tags:
- name: Products
  description: ""
- name: Users
  description: ""
- name: Orders
  description: ""
